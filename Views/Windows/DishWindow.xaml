<ui:UiWindow
    x:Class="CookGPT_MVVM.Views.Windows.DishWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CookGPT_MVVM.Views.Windows"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:notifications="clr-namespace:Notification.Wpf.Controls;assembly=Notification.Wpf"
    xmlns:inter="http://schemas.microsoft.com/xaml/behaviors"      
    xmlns:pages="clr-namespace:CookGPT_MVVM.Views.Pages"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="{Binding ViewModel.ApplicationTitle, Mode=OneWay}"
    Width="500"
    Height="600"
    d:DataContext="{d:DesignInstance local:DishWindow,
                                     IsDesignTimeCreatable=True}"
    d:Background="{DynamicResource ApplicationBackgroundBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ExtendsContentIntoTitleBar="True"
    WindowBackdropType="Mica"
    WindowCornerPreference="Round"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">

    <inter:Interaction.Triggers>
        <inter:EventTrigger EventName="Loaded" >
            <inter:InvokeCommandAction Command="{Binding ViewModel.WindowLoadedCommand}" />
        </inter:EventTrigger>
        <inter:EventTrigger EventName="Closing" >
            <inter:InvokeCommandAction Command="{Binding ViewModel.WindowClosingCommand}" />
        </inter:EventTrigger>
    </inter:Interaction.Triggers>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  The title bar contains window navigation elements and some Tray related extras.  -->
        <!--  You can put additional controls in the header, such as a search bar.  -->
        <!--  <ui:TitleBar.Header />  -->
        <!--<ui:TitleBar
            Title="{Binding ViewModel.ApplicationTitle, Mode=OneWay}"
            Grid.Row="0"
            Icon="pack://application:,,,/Assets/applicationIcon-256.png"
            UseSnapLayout="True">
        </ui:TitleBar>-->

        <notifications:NotificationArea x:Name="DishNotificationArea" Position="BottomRight" MaxItems="3" Panel.ZIndex="4" Margin="200,391,0,23"/>


        <Image Source="{Binding ViewModel.DishImage}" Name="DishImage" HorizontalAlignment="Left" Height="140" Margin="353,42,0,0" VerticalAlignment="Top" Width="138" RenderTransformOrigin="0.459,0.565">
            <Image.Effect>
                <DropShadowEffect Direction="25" Color="#FFB6C2CB" ShadowDepth="7" BlurRadius="4" />
            </Image.Effect>
        </Image>


        <TextBlock Name="NameLabel" HorizontalAlignment="Left" Margin="10,10,0,0" TextWrapping="Wrap" Text="Recipe Name:" VerticalAlignment="Top" Height="29" Width="123" FontSize="18" FontWeight="Bold"/>
        <TextBlock Name="ToolsLabel" HorizontalAlignment="Left" Margin="10,69,0,0" TextWrapping="Wrap" Text="Tools Used:" VerticalAlignment="Top" Height="29" Width="101" FontSize="14" FontWeight="Bold"/>
        <TextBlock Name="TimeLabel" HorizontalAlignment="Left" Margin="11,160,0,0" TextWrapping="Wrap" Text="Time Needed:" VerticalAlignment="Top" Height="29" Width="101" FontWeight="Bold" FontSize="14"/>
        <TextBlock Name="MacrosLabel" HorizontalAlignment="Left" Margin="355,226,0,0" TextWrapping="Wrap" Text="Nutrients:" VerticalAlignment="Top" Height="28" Width="76" FontWeight="Bold" FontSize="14"/>
        <TextBlock Name="RecipeLabel" HorizontalAlignment="Left" Margin="9,199,0,0" TextWrapping="Wrap" Text="Recipe:" VerticalAlignment="Top" Height="29" Width="102" FontWeight="Bold" FontSize="14"/>
        <TextBlock Name="IngredientsLabel" HorizontalAlignment="Left" Margin="10,117,0,0" TextWrapping="Wrap" Text="Ingredients:" VerticalAlignment="Top" Height="29" Width="101" FontSize="14" FontWeight="Bold"/>



        <TextBox Text="{Binding ViewModel.Name}" IsReadOnly="True" Name="RecipeNameBlock" HorizontalAlignment="Left" Margin="133,9,0,0" TextWrapping="Wrap" VerticalAlignment="Top" RenderTransformOrigin="0.154,0.163" Height="50" Width="186" FontSize="13"/>
        <TextBox Text="{Binding ViewModel.ToolsUsed}" IsReadOnly="True" x:Name="ToolsUsedBlock" HorizontalAlignment="Left" Margin="111,69,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" RenderTransformOrigin="0.154,0.163" Height="34" Width="208" FontSize="13"/>
        <TextBox Text="{Binding ViewModel.TimeNeeded}" IsReadOnly="True" x:Name="TimeNeededBlock" HorizontalAlignment="Left" Margin="117,160,0,0" TextWrapping="Wrap" VerticalContentAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="0.154,0.163" Height="29" Width="202" FontSize="12"/>
        <TextBox Text="{Binding ViewModel.Ingredients}" IsReadOnly="True" x:Name="IngredientsBlock" HorizontalAlignment="Left" Margin="111,115,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" RenderTransformOrigin="0.154,0.163" Height="37" Width="208" FontSize="13"/>
        <TextBox Text="{Binding ViewModel.Recipe}" IsReadOnly="True" x:Name="RecipeBlock" HorizontalAlignment="Left" Margin="10,228,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" RenderTransformOrigin="0.154,0.163" Height="255" Width="328" FontSize="14"/>
        <TextBox Text="{Binding ViewModel.Macros}" IsReadOnly="True" x:Name="MacrosBlock" HorizontalAlignment="Left" Margin="355,254,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" RenderTransformOrigin="0.154,0.163" Height="132" Width="135" FontSize="14"/>






        <Rectangle HorizontalAlignment="Center" Height="600" Stroke="LightGray" VerticalAlignment="Center" Width="500" StrokeThickness="3" IsHitTestVisible="False" Panel.ZIndex="-1"/>
        <Rectangle HorizontalAlignment="Center" Height="2" Stroke="DarkGray" VerticalAlignment="Top" Width="500" StrokeThickness="1" IsHitTestVisible="False" Panel.ZIndex="-1" Margin="0,192,0,0" RenderTransformOrigin="0.5,0.5">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle HorizontalAlignment="Left" Height="2" Stroke="DarkGray" VerticalAlignment="Top" Width="345" StrokeThickness="1" IsHitTestVisible="False" Panel.ZIndex="-1" Margin="0,157,0,0"/>
        <Rectangle HorizontalAlignment="Left" Height="2" Stroke="DarkGray" VerticalAlignment="Top" Width="345" StrokeThickness="1" IsHitTestVisible="False" Panel.ZIndex="-1" Margin="0,488,0,0"/>
        <Rectangle HorizontalAlignment="Left" Height="2" Stroke="DarkGray" VerticalAlignment="Top" Width="169" StrokeThickness="1" IsHitTestVisible="False" Panel.ZIndex="-1" Margin="345,407,0,0"/>
        <Rectangle HorizontalAlignment="Left" Height="600" Stroke="DarkGray" VerticalAlignment="Center" Width="2" StrokeThickness="1" IsHitTestVisible="False" Panel.ZIndex="-1" Margin="343,0,0,0" RenderTransformOrigin="0.5,0.5">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle HorizontalAlignment="Left" Height="2" Stroke="DarkGray" VerticalAlignment="Top" Width="345" StrokeThickness="1" IsHitTestVisible="False" Panel.ZIndex="-1" Margin="0,108,0,0"/>
        <Rectangle HorizontalAlignment="Left" Height="2" Stroke="DarkGray" VerticalAlignment="Top" Width="345" StrokeThickness="1" IsHitTestVisible="False" Panel.ZIndex="-1" Margin="0,62,0,0" RenderTransformOrigin="0.5,0.5">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle HorizontalAlignment="Left" Height="2" Stroke="DarkGray" VerticalAlignment="Top" Width="155" StrokeThickness="1" IsHitTestVisible="False" Panel.ZIndex="-1" Margin="345,32,0,0"/>

        <Button Content="Save"
            x:Name="SaveButton"
            Foreground="White"
            FontSize="14"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            FontWeight="Medium" Margin="-21,504,0,0" RenderTransformOrigin="0.496,0.573" Width="150" Height="45">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-0.413"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>


            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#56b48c"/>
                    <Setter Property="Cursor" Value="Hand"/>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGreen"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Gray"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="100"
                        CornerRadius="12"
                        Background="{TemplateBinding Background}" Margin="43,10,-13,10">
                        <ContentPresenter VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>

                    </Border>
                </ControlTemplate>
            </Button.Template>

        </Button>
        <Button Content="Delete"
            IsEnabled="False"  
            x:Name="DeleteButton"
            Foreground="White"
            FontSize="14"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            FontWeight="Medium" Margin="152,504,0,0" RenderTransformOrigin="0.496,0.573" Width="150" Height="45">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-0.413"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>


            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="DarkRed"/>
                    <Setter Property="Cursor" Value="Hand"/>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Gray"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>

            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="100"
                        CornerRadius="12"
                        Background="{TemplateBinding Background}" Margin="43,10,-13,10">
                        <ContentPresenter VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>

                    </Border>
                </ControlTemplate>
            </Button.Template>

        </Button>


    </Grid>
</ui:UiWindow>
